{"ast":null,"code":"import _objectSpread from\"/Users/mbanner/CascadeProjects/gulp-job-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';// Determine the API URL based on environment\nconst determineApiUrl=()=>{console.log('Determining API URL for hostname:',window.location.hostname);// If explicit API URL is provided in environment, use it\nif(process.env.REACT_APP_API_URL){console.log('Using explicit API URL from environment:',process.env.REACT_APP_API_URL);return process.env.REACT_APP_API_URL;}// For Render deployment: if frontend is on render.com, assume backend is too\nif(window.location.hostname.includes('render.com')||window.location.hostname.includes('onrender.com')){console.log('Detected Render deployment');// Verbesserte Logik für Render-Deployment\n// 1. Wenn die URL gulp-job-app.onrender.com ist, verwende gulp-job-app-api.onrender.com\nif(window.location.hostname.includes('gulp-job-app')){const apiUrl=window.location.origin.replace('gulp-job-app','gulp-job-app-api');console.log('Using matched Render API URL:',apiUrl);return apiUrl;}// 2. Fallback: Extrahiere den App-Namen aus dem Hostnamen\nconst hostParts=window.location.hostname.split('-');if(hostParts.length>0){const appPrefix=hostParts[0];// z.B. 'gulp'\nconst apiUrl=\"https://\".concat(appPrefix,\"-backend.onrender.com\");console.log('Using constructed Render API URL with prefix:',apiUrl);return apiUrl;}// 3. Letzter Fallback: Ersetze 'frontend' durch 'backend'\nconst fallbackUrl=window.location.origin.replace('frontend','backend');console.log('Using fallback Render API URL:',fallbackUrl);return fallbackUrl;}// Local development\nconsole.log('Using local development API URL');return'http://localhost:8001';// Updated to match our current port\n};const API_URL=determineApiUrl();console.log('Using API URL:',API_URL);// Create axios instance with base URL\nconst api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'},// Add withCredentials for CORS with credentials\nwithCredentials:API_URL.includes('render.com')||API_URL.includes('onrender.com')});// Get recent projects (last 24h) with optional filters\nexport const getProjects=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{// Make sure we're using the correct parameter name for show_all\nconst apiParams=_objectSpread({},params);// If show_all is present, make sure it's sent as a string 'true' or 'false'\nif(apiParams.show_all!==undefined){apiParams.show_all=apiParams.show_all.toString();}console.log('API call to /projects with params:',apiParams);const response=await api.get('/projects',{params:apiParams});console.log('API response status:',response.status);return response.data;}catch(error){console.error('Error fetching recent projects:',error);throw error;}};// Get archived projects (older than 24h) with optional filters\nexport const getArchivedProjects=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await api.get('/projects/archive',{params});return response.data;}catch(error){console.error('Error fetching archived projects:',error);throw error;}};// Get scraper status\nexport const getScraperStatus=async()=>{try{const response=await api.get('/status');return response.data;}catch(error){console.error('Error fetching scraper status:',error);throw error;}};// Trigger a new scrape\nexport const triggerScrape=async function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await api.post('/scrape',options);return response.data;}catch(error){console.error('Error triggering scrape:',error);throw error;}};// Get new projects\nexport const getNewProjects=async()=>{try{const response=await api.get('/new-projects');return response.data;}catch(error){console.error('Error fetching new projects:',error);throw error;}};// Mark projects as seen\nexport const markProjectsAsSeen=async projectIds=>{try{const response=await api.post('/mark-projects-seen',projectIds);return response.data;}catch(error){console.error('Error marking projects as seen:',error);throw error;}};// Get email configuration\nexport const getEmailConfig=async()=>{try{const response=await api.get('/api/email/config');return response.data;}catch(error){console.error('Error fetching email configuration:',error);throw error;}};// Test email configuration\nexport const testEmailConfig=async function(){let recipient=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;try{const requestData={};if(recipient){requestData.email=recipient;}const response=await api.post('/api/email/test',requestData);return response.data;}catch(error){console.error('Error testing email configuration:',error);throw error;}};// Get scheduler configuration\nexport const getSchedulerConfig=async()=>{try{const response=await api.get('/scheduler-config');return response.data;}catch(error){console.error('Error fetching scheduler configuration:',error);throw error;}};// Set email configuration\nexport const setEmailConfig=async config=>{try{const response=await api.post('/api/email/config',config);return response.data;}catch(error){console.error('Error setting email configuration:',error);throw error;}};// Set scheduler configuration\nexport const setSchedulerConfig=async config=>{try{const response=await api.post('/scheduler-config',config);return response.data;}catch(error){console.error('Error setting scheduler configuration:',error);throw error;}};// Get a single project by ID\nexport const getProjectById=async id=>{try{const response=await api.get(\"/projects/\".concat(id));return response.data;}catch(error){console.error(\"Error fetching project with ID \".concat(id,\":\"),error);throw error;}};// Helper function to manage favorites in localStorage\nexport const favoritesManager={// Get all favorites\ngetFavorites:()=>{try{return JSON.parse(localStorage.getItem('favorites'))||[];}catch(error){console.error('Error getting favorites from localStorage:',error);return[];}},// Add a project to favorites\naddFavorite:project=>{try{const favorites=favoritesManager.getFavorites();// Check if project is already in favorites\nif(!favorites.some(fav=>fav.id===project.id)){favorites.push(project);localStorage.setItem('favorites',JSON.stringify(favorites));}return favorites;}catch(error){console.error('Error adding favorite to localStorage:',error);return[];}},// Remove a project from favorites\nremoveFavorite:projectId=>{try{let favorites=favoritesManager.getFavorites();favorites=favorites.filter(fav=>fav.id!==projectId);localStorage.setItem('favorites',JSON.stringify(favorites));return favorites;}catch(error){console.error('Error removing favorite from localStorage:',error);return[];}},// Check if a project is in favorites\nisFavorite:projectId=>{try{const favorites=favoritesManager.getFavorites();return favorites.some(fav=>fav.id===projectId);}catch(error){console.error('Error checking if project is favorite:',error);return false;}}};export default{getProjects,getProjectById,getScraperStatus,triggerScrape,getNewProjects,markProjectsAsSeen,getEmailConfig,setEmailConfig,getSchedulerConfig,setSchedulerConfig,favoritesManager};","map":{"version":3,"names":["axios","determineApiUrl","console","log","window","location","hostname","process","env","REACT_APP_API_URL","includes","apiUrl","origin","replace","hostParts","split","length","appPrefix","concat","fallbackUrl","API_URL","api","create","baseURL","headers","withCredentials","getProjects","params","arguments","undefined","apiParams","_objectSpread","show_all","toString","response","get","status","data","error","getArchivedProjects","getScraperStatus","triggerScrape","options","post","getNewProjects","markProjectsAsSeen","projectIds","getEmailConfig","testEmailConfig","recipient","requestData","email","getSchedulerConfig","setEmailConfig","config","setSchedulerConfig","getProjectById","id","favoritesManager","getFavorites","JSON","parse","localStorage","getItem","addFavorite","project","favorites","some","fav","push","setItem","stringify","removeFavorite","projectId","filter","isFavorite"],"sources":["/Users/mbanner/CascadeProjects/gulp-job-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Determine the API URL based on environment\nconst determineApiUrl = () => {\n  console.log('Determining API URL for hostname:', window.location.hostname);\n  \n  // If explicit API URL is provided in environment, use it\n  if (process.env.REACT_APP_API_URL) {\n    console.log('Using explicit API URL from environment:', process.env.REACT_APP_API_URL);\n    return process.env.REACT_APP_API_URL;\n  }\n  \n  // For Render deployment: if frontend is on render.com, assume backend is too\n  if (window.location.hostname.includes('render.com') || \n      window.location.hostname.includes('onrender.com')) {\n    console.log('Detected Render deployment');\n    \n    // Verbesserte Logik für Render-Deployment\n    // 1. Wenn die URL gulp-job-app.onrender.com ist, verwende gulp-job-app-api.onrender.com\n    if (window.location.hostname.includes('gulp-job-app')) {\n      const apiUrl = window.location.origin.replace('gulp-job-app', 'gulp-job-app-api');\n      console.log('Using matched Render API URL:', apiUrl);\n      return apiUrl;\n    }\n    \n    // 2. Fallback: Extrahiere den App-Namen aus dem Hostnamen\n    const hostParts = window.location.hostname.split('-');\n    if (hostParts.length > 0) {\n      const appPrefix = hostParts[0]; // z.B. 'gulp'\n      const apiUrl = `https://${appPrefix}-backend.onrender.com`;\n      console.log('Using constructed Render API URL with prefix:', apiUrl);\n      return apiUrl;\n    }\n    \n    // 3. Letzter Fallback: Ersetze 'frontend' durch 'backend'\n    const fallbackUrl = window.location.origin.replace('frontend', 'backend');\n    console.log('Using fallback Render API URL:', fallbackUrl);\n    return fallbackUrl;\n  }\n  \n  // Local development\n  console.log('Using local development API URL');\n  return 'http://localhost:8001'; // Updated to match our current port\n};\n\nconst API_URL = determineApiUrl();\nconsole.log('Using API URL:', API_URL);\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  // Add withCredentials for CORS with credentials\n  withCredentials: API_URL.includes('render.com') || API_URL.includes('onrender.com'),\n});\n\n// Get recent projects (last 24h) with optional filters\nexport const getProjects = async (params = {}) => {\n  try {\n    // Make sure we're using the correct parameter name for show_all\n    const apiParams = { ...params };\n    \n    // If show_all is present, make sure it's sent as a string 'true' or 'false'\n    if (apiParams.show_all !== undefined) {\n      apiParams.show_all = apiParams.show_all.toString();\n    }\n    \n    console.log('API call to /projects with params:', apiParams);\n    const response = await api.get('/projects', { params: apiParams });\n    console.log('API response status:', response.status);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching recent projects:', error);\n    throw error;\n  }\n};\n\n// Get archived projects (older than 24h) with optional filters\nexport const getArchivedProjects = async (params = {}) => {\n  try {\n    const response = await api.get('/projects/archive', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching archived projects:', error);\n    throw error;\n  }\n};\n\n// Get scraper status\nexport const getScraperStatus = async () => {\n  try {\n    const response = await api.get('/status');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching scraper status:', error);\n    throw error;\n  }\n};\n\n// Trigger a new scrape\nexport const triggerScrape = async (options = {}) => {\n  try {\n    const response = await api.post('/scrape', options);\n    return response.data;\n  } catch (error) {\n    console.error('Error triggering scrape:', error);\n    throw error;\n  }\n};\n\n// Get new projects\nexport const getNewProjects = async () => {\n  try {\n    const response = await api.get('/new-projects');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching new projects:', error);\n    throw error;\n  }\n};\n\n// Mark projects as seen\nexport const markProjectsAsSeen = async (projectIds) => {\n  try {\n    const response = await api.post('/mark-projects-seen', projectIds);\n    return response.data;\n  } catch (error) {\n    console.error('Error marking projects as seen:', error);\n    throw error;\n  }\n};\n\n// Get email configuration\nexport const getEmailConfig = async () => {\n  try {\n    const response = await api.get('/api/email/config');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching email configuration:', error);\n    throw error;\n  }\n};\n\n// Test email configuration\nexport const testEmailConfig = async (recipient = null) => {\n  try {\n    const requestData = {};\n    if (recipient) {\n      requestData.email = recipient;\n    }\n    \n    const response = await api.post('/api/email/test', requestData);\n    return response.data;\n  } catch (error) {\n    console.error('Error testing email configuration:', error);\n    throw error;\n  }\n};\n\n// Get scheduler configuration\nexport const getSchedulerConfig = async () => {\n  try {\n    const response = await api.get('/scheduler-config');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching scheduler configuration:', error);\n    throw error;\n  }\n};\n\n// Set email configuration\nexport const setEmailConfig = async (config) => {\n  try {\n    const response = await api.post('/api/email/config', config);\n    return response.data;\n  } catch (error) {\n    console.error('Error setting email configuration:', error);\n    throw error;\n  }\n};\n\n// Set scheduler configuration\nexport const setSchedulerConfig = async (config) => {\n  try {\n    const response = await api.post('/scheduler-config', config);\n    return response.data;\n  } catch (error) {\n    console.error('Error setting scheduler configuration:', error);\n    throw error;\n  }\n};\n\n// Get a single project by ID\nexport const getProjectById = async (id) => {\n  try {\n    const response = await api.get(`/projects/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching project with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Helper function to manage favorites in localStorage\nexport const favoritesManager = {\n  // Get all favorites\n  getFavorites: () => {\n    try {\n      return JSON.parse(localStorage.getItem('favorites')) || [];\n    } catch (error) {\n      console.error('Error getting favorites from localStorage:', error);\n      return [];\n    }\n  },\n  \n  // Add a project to favorites\n  addFavorite: (project) => {\n    try {\n      const favorites = favoritesManager.getFavorites();\n      // Check if project is already in favorites\n      if (!favorites.some(fav => fav.id === project.id)) {\n        favorites.push(project);\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n      }\n      return favorites;\n    } catch (error) {\n      console.error('Error adding favorite to localStorage:', error);\n      return [];\n    }\n  },\n  \n  // Remove a project from favorites\n  removeFavorite: (projectId) => {\n    try {\n      let favorites = favoritesManager.getFavorites();\n      favorites = favorites.filter(fav => fav.id !== projectId);\n      localStorage.setItem('favorites', JSON.stringify(favorites));\n      return favorites;\n    } catch (error) {\n      console.error('Error removing favorite from localStorage:', error);\n      return [];\n    }\n  },\n  \n  // Check if a project is in favorites\n  isFavorite: (projectId) => {\n    try {\n      const favorites = favoritesManager.getFavorites();\n      return favorites.some(fav => fav.id === projectId);\n    } catch (error) {\n      console.error('Error checking if project is favorite:', error);\n      return false;\n    }\n  }\n};\n\nexport default {\n  getProjects,\n  getProjectById,\n  getScraperStatus,\n  triggerScrape,\n  getNewProjects,\n  markProjectsAsSeen,\n  getEmailConfig,\n  setEmailConfig,\n  getSchedulerConfig,\n  setSchedulerConfig,\n  favoritesManager\n};\n"],"mappings":"yIAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5BC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAE1E;AACA,GAAIC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAE,CACjCP,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAEI,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC,CACtF,MAAO,CAAAF,OAAO,CAACC,GAAG,CAACC,iBAAiB,CACtC,CAEA;AACA,GAAIL,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACI,QAAQ,CAAC,YAAY,CAAC,EAC/CN,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACI,QAAQ,CAAC,cAAc,CAAC,CAAE,CACrDR,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CAEzC;AACA;AACA,GAAIC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACI,QAAQ,CAAC,cAAc,CAAC,CAAE,CACrD,KAAM,CAAAC,MAAM,CAAGP,MAAM,CAACC,QAAQ,CAACO,MAAM,CAACC,OAAO,CAAC,cAAc,CAAE,kBAAkB,CAAC,CACjFX,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAEQ,MAAM,CAAC,CACpD,MAAO,CAAAA,MAAM,CACf,CAEA;AACA,KAAM,CAAAG,SAAS,CAAGV,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACS,KAAK,CAAC,GAAG,CAAC,CACrD,GAAID,SAAS,CAACE,MAAM,CAAG,CAAC,CAAE,CACxB,KAAM,CAAAC,SAAS,CAAGH,SAAS,CAAC,CAAC,CAAC,CAAE;AAChC,KAAM,CAAAH,MAAM,YAAAO,MAAA,CAAcD,SAAS,yBAAuB,CAC1Df,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAEQ,MAAM,CAAC,CACpE,MAAO,CAAAA,MAAM,CACf,CAEA;AACA,KAAM,CAAAQ,WAAW,CAAGf,MAAM,CAACC,QAAQ,CAACO,MAAM,CAACC,OAAO,CAAC,UAAU,CAAE,SAAS,CAAC,CACzEX,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEgB,WAAW,CAAC,CAC1D,MAAO,CAAAA,WAAW,CACpB,CAEA;AACAjB,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAC9C,MAAO,uBAAuB,CAAE;AAClC,CAAC,CAED,KAAM,CAAAiB,OAAO,CAAGnB,eAAe,CAAC,CAAC,CACjCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEiB,OAAO,CAAC,CAEtC;AACA,KAAM,CAAAC,GAAG,CAAGrB,KAAK,CAACsB,MAAM,CAAC,CACvBC,OAAO,CAAEH,OAAO,CAChBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACD;AACAC,eAAe,CAAEL,OAAO,CAACV,QAAQ,CAAC,YAAY,CAAC,EAAIU,OAAO,CAACV,QAAQ,CAAC,cAAc,CACpF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAgB,WAAW,CAAG,cAAAA,CAAA,CAAuB,IAAhB,CAAAC,MAAM,CAAAC,SAAA,CAAAZ,MAAA,IAAAY,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,CAAC,CAC3C,GAAI,CACF;AACA,KAAM,CAAAE,SAAS,CAAAC,aAAA,IAAQJ,MAAM,CAAE,CAE/B;AACA,GAAIG,SAAS,CAACE,QAAQ,GAAKH,SAAS,CAAE,CACpCC,SAAS,CAACE,QAAQ,CAAGF,SAAS,CAACE,QAAQ,CAACC,QAAQ,CAAC,CAAC,CACpD,CAEA/B,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAE2B,SAAS,CAAC,CAC5D,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,CAAC,WAAW,CAAE,CAAER,MAAM,CAAEG,SAAU,CAAC,CAAC,CAClE5B,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAE+B,QAAQ,CAACE,MAAM,CAAC,CACpD,MAAO,CAAAF,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,mBAAmB,CAAG,cAAAA,CAAA,CAAuB,IAAhB,CAAAZ,MAAM,CAAAC,SAAA,CAAAZ,MAAA,IAAAY,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,CAAC,CACnD,GAAI,CACF,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,CAAC,mBAAmB,CAAE,CAAER,MAAO,CAAC,CAAC,CAC/D,MAAO,CAAAO,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CACzD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CAC1C,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,CAAC,SAAS,CAAC,CACzC,MAAO,CAAAD,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,aAAa,CAAG,cAAAA,CAAA,CAAwB,IAAjB,CAAAC,OAAO,CAAAd,SAAA,CAAAZ,MAAA,IAAAY,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,CAAC,CAC9C,GAAI,CACF,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACsB,IAAI,CAAC,SAAS,CAAED,OAAO,CAAC,CACnD,MAAO,CAAAR,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,cAAc,CAAG,KAAAA,CAAA,GAAY,CACxC,GAAI,CACF,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,CAAC,eAAe,CAAC,CAC/C,MAAO,CAAAD,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAO,kBAAkB,CAAG,KAAO,CAAAC,UAAU,EAAK,CACtD,GAAI,CACF,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACsB,IAAI,CAAC,qBAAqB,CAAEG,UAAU,CAAC,CAClE,MAAO,CAAAZ,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAS,cAAc,CAAG,KAAAA,CAAA,GAAY,CACxC,GAAI,CACF,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,CAAC,mBAAmB,CAAC,CACnD,MAAO,CAAAD,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,qCAAqC,CAAEA,KAAK,CAAC,CAC3D,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,eAAe,CAAG,cAAAA,CAAA,CAA4B,IAArB,CAAAC,SAAS,CAAArB,SAAA,CAAAZ,MAAA,IAAAY,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CACpD,GAAI,CACF,KAAM,CAAAsB,WAAW,CAAG,CAAC,CAAC,CACtB,GAAID,SAAS,CAAE,CACbC,WAAW,CAACC,KAAK,CAAGF,SAAS,CAC/B,CAEA,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACsB,IAAI,CAAC,iBAAiB,CAAEO,WAAW,CAAC,CAC/D,MAAO,CAAAhB,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1D,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAc,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CAC5C,GAAI,CACF,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,CAAC,mBAAmB,CAAC,CACnD,MAAO,CAAAD,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,yCAAyC,CAAEA,KAAK,CAAC,CAC/D,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAe,cAAc,CAAG,KAAO,CAAAC,MAAM,EAAK,CAC9C,GAAI,CACF,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACsB,IAAI,CAAC,mBAAmB,CAAEW,MAAM,CAAC,CAC5D,MAAO,CAAApB,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1D,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAiB,kBAAkB,CAAG,KAAO,CAAAD,MAAM,EAAK,CAClD,GAAI,CACF,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACsB,IAAI,CAAC,mBAAmB,CAAEW,MAAM,CAAC,CAC5D,MAAO,CAAApB,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAC9D,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAkB,cAAc,CAAG,KAAO,CAAAC,EAAE,EAAK,CAC1C,GAAI,CACF,KAAM,CAAAvB,QAAQ,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,cAAAjB,MAAA,CAAcuC,EAAE,CAAE,CAAC,CACjD,MAAO,CAAAvB,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,mCAAApB,MAAA,CAAmCuC,EAAE,MAAKnB,KAAK,CAAC,CAC7D,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAoB,gBAAgB,CAAG,CAC9B;AACAC,YAAY,CAAEA,CAAA,GAAM,CAClB,GAAI,CACF,MAAO,CAAAC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAI,EAAE,CAC5D,CAAE,MAAOzB,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,4CAA4C,CAAEA,KAAK,CAAC,CAClE,MAAO,EAAE,CACX,CACF,CAAC,CAED;AACA0B,WAAW,CAAGC,OAAO,EAAK,CACxB,GAAI,CACF,KAAM,CAAAC,SAAS,CAAGR,gBAAgB,CAACC,YAAY,CAAC,CAAC,CACjD;AACA,GAAI,CAACO,SAAS,CAACC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACX,EAAE,GAAKQ,OAAO,CAACR,EAAE,CAAC,CAAE,CACjDS,SAAS,CAACG,IAAI,CAACJ,OAAO,CAAC,CACvBH,YAAY,CAACQ,OAAO,CAAC,WAAW,CAAEV,IAAI,CAACW,SAAS,CAACL,SAAS,CAAC,CAAC,CAC9D,CACA,MAAO,CAAAA,SAAS,CAClB,CAAE,MAAO5B,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAC9D,MAAO,EAAE,CACX,CACF,CAAC,CAED;AACAkC,cAAc,CAAGC,SAAS,EAAK,CAC7B,GAAI,CACF,GAAI,CAAAP,SAAS,CAAGR,gBAAgB,CAACC,YAAY,CAAC,CAAC,CAC/CO,SAAS,CAAGA,SAAS,CAACQ,MAAM,CAACN,GAAG,EAAIA,GAAG,CAACX,EAAE,GAAKgB,SAAS,CAAC,CACzDX,YAAY,CAACQ,OAAO,CAAC,WAAW,CAAEV,IAAI,CAACW,SAAS,CAACL,SAAS,CAAC,CAAC,CAC5D,MAAO,CAAAA,SAAS,CAClB,CAAE,MAAO5B,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,4CAA4C,CAAEA,KAAK,CAAC,CAClE,MAAO,EAAE,CACX,CACF,CAAC,CAED;AACAqC,UAAU,CAAGF,SAAS,EAAK,CACzB,GAAI,CACF,KAAM,CAAAP,SAAS,CAAGR,gBAAgB,CAACC,YAAY,CAAC,CAAC,CACjD,MAAO,CAAAO,SAAS,CAACC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACX,EAAE,GAAKgB,SAAS,CAAC,CACpD,CAAE,MAAOnC,KAAK,CAAE,CACdpC,OAAO,CAACoC,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAC9D,MAAO,MAAK,CACd,CACF,CACF,CAAC,CAED,cAAe,CACbZ,WAAW,CACX8B,cAAc,CACdhB,gBAAgB,CAChBC,aAAa,CACbG,cAAc,CACdC,kBAAkB,CAClBE,cAAc,CACdM,cAAc,CACdD,kBAAkB,CAClBG,kBAAkB,CAClBG,gBACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}