{"ast":null,"code":"var _jsxFileName = \"/Users/mbanner/CascadeProjects/gulp-job-app/frontend/src/components/AIProjectAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Card, CardContent, Typography, TextField, CircularProgress, Alert, Accordion, AccordionSummary, AccordionDetails, Chip, Stack, Divider } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\nimport { getAIConfig } from '../utils/aiConfig';\n\n/**\n * Component for AI-powered project analysis\n * Uses Hugging Face Inference API for free AI capabilities\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIProjectAnalyzer = ({\n  project,\n  onClose\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [result, setResult] = useState(null);\n  const [customPrompt, setCustomPrompt] = useState('');\n  const [analysisType, setAnalysisType] = useState('skills');\n  const [config, setConfig] = useState(null);\n\n  // Lade KI-Konfiguration beim Komponenten-Mount\n  useEffect(() => {\n    const aiConfig = getAIConfig();\n    setConfig(aiConfig);\n  }, []);\n\n  // Available free models\n  const availableModels = [{\n    id: 'google/flan-t5-small',\n    name: 'Flan-T5 Small (schnell)',\n    type: 'text'\n  }, {\n    id: 'google/flan-t5-base',\n    name: 'Flan-T5 Base (ausgewogen)',\n    type: 'text'\n  }, {\n    id: 'gpt2',\n    name: 'GPT-2 (kreativ)',\n    type: 'text'\n  }];\n\n  // Analysis types\n  const analysisTypes = [{\n    id: 'skills',\n    name: 'Benötigte Skills',\n    prompt: 'Welche Fähigkeiten und Technologien werden für dieses Projekt benötigt? Liste sie als Stichpunkte auf.'\n  }, {\n    id: 'summary',\n    name: 'Projektzusammenfassung',\n    prompt: 'Fasse dieses Projekt in 3-5 Sätzen zusammen.'\n  }, {\n    id: 'salary',\n    name: 'Gehaltseinschätzung',\n    prompt: 'Schätze den möglichen Tagessatz für dieses Projekt basierend auf den Anforderungen und dem Standort. Gib eine Spanne an.'\n  }, {\n    id: 'custom',\n    name: 'Benutzerdefinierte Analyse',\n    prompt: ''\n  }];\n\n  // Get the current analysis type object\n  const currentAnalysisType = analysisTypes.find(type => type.id === analysisType);\n\n  // Prepare project data for analysis\n  const prepareProjectData = () => {\n    const {\n      title,\n      description,\n      location,\n      skills,\n      companyName\n    } = project;\n    return `\nProjekttitel: ${title || 'Nicht angegeben'}\nBeschreibung: ${description || 'Keine Beschreibung verfügbar'}\nStandort: ${location || 'Nicht angegeben'}\nFirma: ${companyName || 'Nicht angegeben'}\nSkills: ${Array.isArray(skills) ? skills.join(', ') : skills || 'Keine Skills angegeben'}\n    `.trim();\n  };\n\n  // Generate the prompt for the AI model\n  const generatePrompt = () => {\n    if (analysisType === 'custom') {\n      return `${prepareProjectData()}\\n\\n${customPrompt}`;\n    }\n    return `${prepareProjectData()}\\n\\n${currentAnalysisType.prompt}`;\n  };\n\n  // Call the Hugging Face Inference API\n  const analyzeProject = async () => {\n    if (!config) {\n      setError('KI-Konfiguration konnte nicht geladen werden.');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const prompt = generatePrompt();\n      const selectedModel = config.defaultModel;\n\n      // Use the Hugging Face Inference API (requires API key in production)\n      // For demo purposes, we'll simulate a response\n\n      // In a real implementation, you would make an API call like this:\n      /*\n      const apiKey = config.apiKey || process.env.REACT_APP_HUGGINGFACE_API_KEY;\n      \n      if (!apiKey) {\n        console.warn('Kein API-Schlüssel gefunden, verwende eingeschränkten Zugriff');\n      }\n      \n      const response = await fetch(\n        `https://api-inference.huggingface.co/models/${selectedModel}`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            ...(apiKey && { 'Authorization': `Bearer ${apiKey}` })\n          },\n          body: JSON.stringify({ \n            inputs: prompt,\n            parameters: {\n              max_new_tokens: config.maxTokens || 100\n            }\n          }),\n        }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setResult(data[0].generated_text);\n      */\n\n      // Simulate API response for demo\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      let simulatedResponse;\n      switch (analysisType) {\n        case 'skills':\n          simulatedResponse = `\n- JavaScript/TypeScript\n- React.js\n- Node.js\n- RESTful APIs\n- Git/GitHub\n- Agile Entwicklungsmethoden\n- Erfahrung mit Cloud-Diensten (AWS/Azure)\n- CI/CD Pipelines\n          `.trim();\n          break;\n        case 'summary':\n          simulatedResponse = `\nDas Projekt umfasst die Entwicklung einer modernen Webanwendung mit React.js und Node.js. Es handelt sich um eine Full-Stack-Entwicklung mit Fokus auf Benutzerfreundlichkeit und Skalierbarkeit. Der Entwickler wird in einem agilen Team arbeiten und sollte Erfahrung mit Cloud-Diensten und CI/CD-Prozessen mitbringen.\n          `.trim();\n          break;\n        case 'salary':\n          simulatedResponse = `\nBasierend auf den Anforderungen und dem Standort würde ich einen Tagessatz zwischen 750€ und 950€ schätzen. Die Spanne kann je nach genauer Erfahrung und Spezialisierung variieren.\n          `.trim();\n          break;\n        case 'custom':\n          simulatedResponse = `\nHier ist eine benutzerdefinierte Analyse basierend auf Ihrer Anfrage. In einer Produktivumgebung würde diese Antwort vom ausgewählten KI-Modell generiert werden.\n          `.trim();\n          break;\n        default:\n          simulatedResponse = 'Analyse abgeschlossen.';\n      }\n      setResult(simulatedResponse);\n    } catch (err) {\n      console.error('Error analyzing project:', err);\n      setError('Fehler bei der Analyse. Bitte versuchen Sie es später erneut.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(SmartToyIcon, {\n          sx: {\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"KI-Projektanalyse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          size: \"small\",\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Analysetyp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: analysisType,\n            onChange: e => setAnalysisType(e.target.value),\n            label: \"Analysetyp\",\n            children: analysisTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: type.id,\n              children: type.name\n            }, type.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), analysisType === 'custom' && /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 3,\n          label: \"Benutzerdefinierte Anfrage\",\n          variant: \"outlined\",\n          size: \"small\",\n          value: customPrompt,\n          onChange: e => setCustomPrompt(e.target.value),\n          placeholder: \"Stellen Sie Ihre Frage zum Projekt...\",\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          size: \"small\",\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"KI-Modell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: model,\n            onChange: e => setModel(e.target.value),\n            label: \"KI-Modell\",\n            children: availableModels.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: model.id,\n              children: model.name\n            }, model.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Alle Modelle sind kostenlos \\xFCber die Hugging Face Inference API verf\\xFCgbar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: analyzeProject,\n          disabled: loading || analysisType === 'custom' && !customPrompt.trim(),\n          fullWidth: true,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 24\n          }, this) : 'Projekt analysieren'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), result && /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2,\n          bgcolor: 'background.paper'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Analyseergebnis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"div\",\n          sx: {\n            whiteSpace: 'pre-line'\n          },\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(AIProjectAnalyzer, \"WlJ/OPmXk+1AuJ2dsbpm5rRJLhU=\");\n_c = AIProjectAnalyzer;\nexport default AIProjectAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"AIProjectAnalyzer\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Card","CardContent","Typography","TextField","CircularProgress","Alert","Accordion","AccordionSummary","AccordionDetails","Chip","Stack","Divider","ExpandMoreIcon","SmartToyIcon","getAIConfig","jsxDEV","_jsxDEV","AIProjectAnalyzer","project","onClose","_s","loading","setLoading","error","setError","result","setResult","customPrompt","setCustomPrompt","analysisType","setAnalysisType","config","setConfig","aiConfig","availableModels","id","name","type","analysisTypes","prompt","currentAnalysisType","find","prepareProjectData","title","description","location","skills","companyName","Array","isArray","join","trim","generatePrompt","analyzeProject","selectedModel","defaultModel","Promise","resolve","setTimeout","simulatedResponse","err","console","sx","mb","children","display","alignItems","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","FormControl","fullWidth","size","InputLabel","Select","value","onChange","e","target","label","map","MenuItem","multiline","rows","placeholder","model","setModel","FormHelperText","onClick","disabled","severity","Paper","p","bgcolor","gutterBottom","component","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/mbanner/CascadeProjects/gulp-job-app/frontend/src/components/AIProjectAnalyzer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  CircularProgress,\n  Alert,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Chip,\n  Stack,\n  Divider\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\nimport { getAIConfig } from '../utils/aiConfig';\n\n/**\n * Component for AI-powered project analysis\n * Uses Hugging Face Inference API for free AI capabilities\n */\nconst AIProjectAnalyzer = ({ project, onClose }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [result, setResult] = useState(null);\n  const [customPrompt, setCustomPrompt] = useState('');\n  const [analysisType, setAnalysisType] = useState('skills');\n  const [config, setConfig] = useState(null);\n  \n  // Lade KI-Konfiguration beim Komponenten-Mount\n  useEffect(() => {\n    const aiConfig = getAIConfig();\n    setConfig(aiConfig);\n  }, []);\n\n  // Available free models\n  const availableModels = [\n    { id: 'google/flan-t5-small', name: 'Flan-T5 Small (schnell)', type: 'text' },\n    { id: 'google/flan-t5-base', name: 'Flan-T5 Base (ausgewogen)', type: 'text' },\n    { id: 'gpt2', name: 'GPT-2 (kreativ)', type: 'text' }\n  ];\n\n  // Analysis types\n  const analysisTypes = [\n    { id: 'skills', name: 'Benötigte Skills', prompt: 'Welche Fähigkeiten und Technologien werden für dieses Projekt benötigt? Liste sie als Stichpunkte auf.' },\n    { id: 'summary', name: 'Projektzusammenfassung', prompt: 'Fasse dieses Projekt in 3-5 Sätzen zusammen.' },\n    { id: 'salary', name: 'Gehaltseinschätzung', prompt: 'Schätze den möglichen Tagessatz für dieses Projekt basierend auf den Anforderungen und dem Standort. Gib eine Spanne an.' },\n    { id: 'custom', name: 'Benutzerdefinierte Analyse', prompt: '' }\n  ];\n\n  // Get the current analysis type object\n  const currentAnalysisType = analysisTypes.find(type => type.id === analysisType);\n\n  // Prepare project data for analysis\n  const prepareProjectData = () => {\n    const { title, description, location, skills, companyName } = project;\n    \n    return `\nProjekttitel: ${title || 'Nicht angegeben'}\nBeschreibung: ${description || 'Keine Beschreibung verfügbar'}\nStandort: ${location || 'Nicht angegeben'}\nFirma: ${companyName || 'Nicht angegeben'}\nSkills: ${Array.isArray(skills) ? skills.join(', ') : (skills || 'Keine Skills angegeben')}\n    `.trim();\n  };\n\n  // Generate the prompt for the AI model\n  const generatePrompt = () => {\n    if (analysisType === 'custom') {\n      return `${prepareProjectData()}\\n\\n${customPrompt}`;\n    }\n    return `${prepareProjectData()}\\n\\n${currentAnalysisType.prompt}`;\n  };\n\n  // Call the Hugging Face Inference API\n  const analyzeProject = async () => {\n    if (!config) {\n      setError('KI-Konfiguration konnte nicht geladen werden.');\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const prompt = generatePrompt();\n      const selectedModel = config.defaultModel;\n      \n      // Use the Hugging Face Inference API (requires API key in production)\n      // For demo purposes, we'll simulate a response\n      \n      // In a real implementation, you would make an API call like this:\n      /*\n      const apiKey = config.apiKey || process.env.REACT_APP_HUGGINGFACE_API_KEY;\n      \n      if (!apiKey) {\n        console.warn('Kein API-Schlüssel gefunden, verwende eingeschränkten Zugriff');\n      }\n      \n      const response = await fetch(\n        `https://api-inference.huggingface.co/models/${selectedModel}`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            ...(apiKey && { 'Authorization': `Bearer ${apiKey}` })\n          },\n          body: JSON.stringify({ \n            inputs: prompt,\n            parameters: {\n              max_new_tokens: config.maxTokens || 100\n            }\n          }),\n        }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setResult(data[0].generated_text);\n      */\n      \n      // Simulate API response for demo\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      let simulatedResponse;\n      \n      switch (analysisType) {\n        case 'skills':\n          simulatedResponse = `\n- JavaScript/TypeScript\n- React.js\n- Node.js\n- RESTful APIs\n- Git/GitHub\n- Agile Entwicklungsmethoden\n- Erfahrung mit Cloud-Diensten (AWS/Azure)\n- CI/CD Pipelines\n          `.trim();\n          break;\n          \n        case 'summary':\n          simulatedResponse = `\nDas Projekt umfasst die Entwicklung einer modernen Webanwendung mit React.js und Node.js. Es handelt sich um eine Full-Stack-Entwicklung mit Fokus auf Benutzerfreundlichkeit und Skalierbarkeit. Der Entwickler wird in einem agilen Team arbeiten und sollte Erfahrung mit Cloud-Diensten und CI/CD-Prozessen mitbringen.\n          `.trim();\n          break;\n          \n        case 'salary':\n          simulatedResponse = `\nBasierend auf den Anforderungen und dem Standort würde ich einen Tagessatz zwischen 750€ und 950€ schätzen. Die Spanne kann je nach genauer Erfahrung und Spezialisierung variieren.\n          `.trim();\n          break;\n          \n        case 'custom':\n          simulatedResponse = `\nHier ist eine benutzerdefinierte Analyse basierend auf Ihrer Anfrage. In einer Produktivumgebung würde diese Antwort vom ausgewählten KI-Modell generiert werden.\n          `.trim();\n          break;\n          \n        default:\n          simulatedResponse = 'Analyse abgeschlossen.';\n      }\n      \n      setResult(simulatedResponse);\n    } catch (err) {\n      console.error('Error analyzing project:', err);\n      setError('Fehler bei der Analyse. Bitte versuchen Sie es später erneut.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card sx={{ mb: 3 }}>\n      <CardContent>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <SmartToyIcon sx={{ mr: 1 }} />\n          <Typography variant=\"h6\">KI-Projektanalyse</Typography>\n        </Box>\n        \n        <Divider sx={{ mb: 2 }} />\n        \n        <Box sx={{ mb: 3 }}>\n          <FormControl fullWidth size=\"small\" sx={{ mb: 2 }}>\n            <InputLabel>Analysetyp</InputLabel>\n            <Select\n              value={analysisType}\n              onChange={(e) => setAnalysisType(e.target.value)}\n              label=\"Analysetyp\"\n            >\n              {analysisTypes.map((type) => (\n                <MenuItem key={type.id} value={type.id}>{type.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          \n          {analysisType === 'custom' && (\n            <TextField\n              fullWidth\n              multiline\n              rows={3}\n              label=\"Benutzerdefinierte Anfrage\"\n              variant=\"outlined\"\n              size=\"small\"\n              value={customPrompt}\n              onChange={(e) => setCustomPrompt(e.target.value)}\n              placeholder=\"Stellen Sie Ihre Frage zum Projekt...\"\n              sx={{ mb: 2 }}\n            />\n          )}\n          \n          <FormControl fullWidth size=\"small\" sx={{ mb: 2 }}>\n            <InputLabel>KI-Modell</InputLabel>\n            <Select\n              value={model}\n              onChange={(e) => setModel(e.target.value)}\n              label=\"KI-Modell\"\n            >\n              {availableModels.map((model) => (\n                <MenuItem key={model.id} value={model.id}>{model.name}</MenuItem>\n              ))}\n            </Select>\n            <FormHelperText>\n              Alle Modelle sind kostenlos über die Hugging Face Inference API verfügbar\n            </FormHelperText>\n          </FormControl>\n          \n          <Button\n            variant=\"contained\"\n            onClick={analyzeProject}\n            disabled={loading || (analysisType === 'custom' && !customPrompt.trim())}\n            fullWidth\n          >\n            {loading ? <CircularProgress size={24} /> : 'Projekt analysieren'}\n          </Button>\n        </Box>\n        \n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n        \n        {result && (\n          <Paper variant=\"outlined\" sx={{ p: 2, bgcolor: 'background.paper' }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Analyseergebnis:\n            </Typography>\n            <Typography variant=\"body2\" component=\"div\" sx={{ whiteSpace: 'pre-line' }}>\n              {result}\n            </Typography>\n          </Paper>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AIProjectAnalyzer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}