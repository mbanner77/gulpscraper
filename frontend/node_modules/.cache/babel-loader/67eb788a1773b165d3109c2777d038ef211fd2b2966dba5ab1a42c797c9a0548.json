{"ast":null,"code":"/**\n * AI Configuration Utilities\n * Provides functions to manage AI configuration settings\n */\n\n// Default AI configuration\nconst defaultConfig = {\n  enabled: true,\n  apiKey: '',\n  defaultModel: 'google/flan-t5-small',\n  autoAnalyze: false,\n  maxTokens: 100\n};\n\n/**\n * Initialize AI configuration\n * Sets default configuration if none exists\n */\nexport const initAIConfig = () => {\n  try {\n    const savedConfig = localStorage.getItem('aiConfig');\n    if (!savedConfig) {\n      localStorage.setItem('aiConfig', JSON.stringify(defaultConfig));\n      console.log('AI configuration initialized with defaults');\n    }\n  } catch (err) {\n    console.error('Error initializing AI configuration:', err);\n  }\n};\n\n/**\n * Get current AI configuration\n * @returns {Object} Current AI configuration\n */\nexport const getAIConfig = () => {\n  try {\n    const savedConfig = localStorage.getItem('aiConfig');\n    if (savedConfig) {\n      return JSON.parse(savedConfig);\n    }\n    return defaultConfig;\n  } catch (err) {\n    console.error('Error getting AI configuration:', err);\n    return defaultConfig;\n  }\n};\n\n/**\n * Save AI configuration\n * @param {Object} config - AI configuration to save\n * @returns {boolean} Success status\n */\nexport const saveAIConfig = config => {\n  try {\n    localStorage.setItem('aiConfig', JSON.stringify(config));\n    return true;\n  } catch (err) {\n    console.error('Error saving AI configuration:', err);\n    return false;\n  }\n};\n\n// Initialize AI configuration on module import\ninitAIConfig();","map":{"version":3,"names":["defaultConfig","enabled","apiKey","defaultModel","autoAnalyze","maxTokens","initAIConfig","savedConfig","localStorage","getItem","setItem","JSON","stringify","console","log","err","error","getAIConfig","parse","saveAIConfig","config"],"sources":["/Users/mbanner/CascadeProjects/gulp-job-app/frontend/src/utils/aiConfig.js"],"sourcesContent":["/**\n * AI Configuration Utilities\n * Provides functions to manage AI configuration settings\n */\n\n// Default AI configuration\nconst defaultConfig = {\n  enabled: true,\n  apiKey: '',\n  defaultModel: 'google/flan-t5-small',\n  autoAnalyze: false,\n  maxTokens: 100\n};\n\n/**\n * Initialize AI configuration\n * Sets default configuration if none exists\n */\nexport const initAIConfig = () => {\n  try {\n    const savedConfig = localStorage.getItem('aiConfig');\n    if (!savedConfig) {\n      localStorage.setItem('aiConfig', JSON.stringify(defaultConfig));\n      console.log('AI configuration initialized with defaults');\n    }\n  } catch (err) {\n    console.error('Error initializing AI configuration:', err);\n  }\n};\n\n/**\n * Get current AI configuration\n * @returns {Object} Current AI configuration\n */\nexport const getAIConfig = () => {\n  try {\n    const savedConfig = localStorage.getItem('aiConfig');\n    if (savedConfig) {\n      return JSON.parse(savedConfig);\n    }\n    return defaultConfig;\n  } catch (err) {\n    console.error('Error getting AI configuration:', err);\n    return defaultConfig;\n  }\n};\n\n/**\n * Save AI configuration\n * @param {Object} config - AI configuration to save\n * @returns {boolean} Success status\n */\nexport const saveAIConfig = (config) => {\n  try {\n    localStorage.setItem('aiConfig', JSON.stringify(config));\n    return true;\n  } catch (err) {\n    console.error('Error saving AI configuration:', err);\n    return false;\n  }\n};\n\n// Initialize AI configuration on module import\ninitAIConfig();\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,aAAa,GAAG;EACpBC,OAAO,EAAE,IAAI;EACbC,MAAM,EAAE,EAAE;EACVC,YAAY,EAAE,sBAAsB;EACpCC,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAE;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,IAAI;IACF,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACpD,IAAI,CAACF,WAAW,EAAE;MAChBC,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACZ,aAAa,CAAC,CAAC;MAC/Da,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IAC3D;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZF,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAED,GAAG,CAAC;EAC5D;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAM;EAC/B,IAAI;IACF,MAAMV,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACpD,IAAIF,WAAW,EAAE;MACf,OAAOI,IAAI,CAACO,KAAK,CAACX,WAAW,CAAC;IAChC;IACA,OAAOP,aAAa;EACtB,CAAC,CAAC,OAAOe,GAAG,EAAE;IACZF,OAAO,CAACG,KAAK,CAAC,iCAAiC,EAAED,GAAG,CAAC;IACrD,OAAOf,aAAa;EACtB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMmB,YAAY,GAAIC,MAAM,IAAK;EACtC,IAAI;IACFZ,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACQ,MAAM,CAAC,CAAC;IACxD,OAAO,IAAI;EACb,CAAC,CAAC,OAAOL,GAAG,EAAE;IACZF,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAED,GAAG,CAAC;IACpD,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACAT,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}